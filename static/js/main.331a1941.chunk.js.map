{"version":3,"sources":["components/layout/Navbar.js","store/actions/searchActions.js","components/parts/SearchForm.js","components/pages/HomePage.js","components/parts/MovieDetails.js","components/parts/MovieCard.js","components/parts/GridMovies.js","components/pages/SearchPage.js","App.js","serviceWorker.js","store/reducers/searchReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","className","to","searchMovie","searchText","page","dispatch","getState","fetch","then","response","json","movies","type","SearchForm","props","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","state","search","history","push","initialState","onSubmit","this","required","onChange","htmlFor","Component","withRouter","connect","titleSearch","HomePage","MovieDetails","initState","trigger","movieDetails","title","Title","plot","Plot","poster","Poster","year","Year","runtime","Runtime","genre","Genre","director","Director","actors","Actors","language","Language","country","Country","production","Production","metascore","Metascore","imdbrating","imdbRating","imdbvotes","imdbVotes","s","alt","src","movie","MovieCard","getDetails","imdbID","getMovieDetails","onClick","Type","GridMovies","getMoviesByPage","results","Search","Fragment","totalResults","map","key","activePage","maxButtons","items","Math","round","onSelect","SearchPage","App","path","component","Boolean","window","location","hostname","match","searchReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.331a1941.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../assets/css/Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar nav-wrapper red darken-4\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Challenge OMDb</Link>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n};\r\n\r\nexport default Navbar;","export const searchMovie = (searchText, page) => {\r\n  return (dispatch, getState) => {\r\n    fetch(`http://www.omdbapi.com/?apikey=ce125e1f&s=${searchText}&page=${page}`)\r\n    .then(response => response.json())\r\n    .then((movies) =>{\r\n      dispatch({\r\n        type: 'SEARCH_MOVIES',\r\n        searchText: searchText,\r\n        movies: movies,\r\n        page: page\r\n      });\r\n    });\r\n  }\r\n}\r\n \r\nexport const getMovieDetails = (imdbID) => {\r\n  return (dispatch, getState) => {\r\n    fetch(`http://www.omdbapi.com/?apikey=ce125e1f&i=${imdbID}`)\r\n    .then(response => response.json())\r\n    .then((movie) =>{\r\n      dispatch({\r\n        type: 'GET_MOVIE_DETAILS',\r\n        movieDetails: movie\r\n      });\r\n    });\r\n  }\r\n}\r\n ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { searchMovie } from '../../store/actions/searchActions';\r\n\r\nclass SearchForm extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.searchMovie(this.state.search,1);\r\n    this.props.history.push('/search');\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <nav className=\"nav-wrapper grey darken-2\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-field\">\r\n            <input id=\"search\" type=\"search\" required onChange={this.handleChange}/>\r\n            <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n            <i className=\"material-icons\">close</i>\r\n          </div>\r\n        </form>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchMovie: (titleSearch) => dispatch(searchMovie(titleSearch))\r\n  }\r\n};\r\n\r\nexport default withRouter(\r\n  connect(null,mapDispatchToProps)(SearchForm)\r\n);\r\n","import React from 'react';\r\nimport SearchForm from '../parts/SearchForm';\r\nimport '../../assets/css/HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"Home grey darken-4\">\r\n      <div className=\"container\">\r\n        <h2>Pesquise por filmes e s√©ries</h2>\r\n        <SearchForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport { Modal, Row, Col, Collection, CollectionItem, Icon } from 'react-materialize';\r\nimport '../../assets/css/MovieDetails.css';\r\n\r\nclass MovieDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initState;\r\n  }\r\n\r\n  get initState() {\r\n    return {\r\n      movie: '',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { trigger, movieDetails } = this.props;\r\n    const title = movieDetails && movieDetails.Title;\r\n    const plot = movieDetails && movieDetails.Plot;\r\n    const poster = movieDetails && movieDetails.Poster;\r\n    const year = movieDetails && movieDetails.Year;\r\n    const runtime = movieDetails && movieDetails.Runtime;\r\n    const genre = movieDetails && movieDetails.Genre;\r\n    const director = movieDetails && movieDetails.Director;\r\n    const actors = movieDetails && movieDetails.Actors;\r\n    const language = movieDetails && movieDetails.Language;\r\n    const country = movieDetails && movieDetails.Country;\r\n    const production = movieDetails && movieDetails.Production;\r\n    const metascore = movieDetails && movieDetails.Metascore;\r\n    const imdbrating = movieDetails && movieDetails.imdbRating;\r\n    const imdbvotes = movieDetails && movieDetails.imdbVotes;\r\n\r\n    return (\r\n        <Modal trigger={trigger}>\r\n          <Row>\r\n            <h3>{title} (<span className=\"green-text text-accent-4\">{year}</span>)</h3>\r\n            <Col s={4}>\r\n              <img className=\"poster\" alt={`${title}'s Poster`} src={poster === \"N/A\" ? \"\" : poster} />\r\n              <Collection>\r\n                <CollectionItem>\r\n                <span className=\"title\">Avalia√ß√µes</span><br/>\r\n                  <strong>Metascore: </strong><span>{metascore}</span><br/>\r\n                  <strong>IMDb Rating: </strong><span>{imdbrating}</span><br/>\r\n                  <strong>IMDb Votes: </strong><span>{imdbvotes}</span><br/>\r\n                </CollectionItem>\r\n              </Collection>\r\n            </Col>\r\n            <Col s={8}>\r\n              <Collection>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"grey darken-4 circle\">feedback</Icon>\r\n                  <span className=\"title\">Resumo</span>\r\n                  <p>{plot}</p>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"pink darken-4 circle\">language</Icon>\r\n                  <strong>Linguagem: </strong><span>{language}</span><br/>\r\n                  <strong>Pa√≠s de origem: </strong><span>{country}</span>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"green darken-4 circle\">access_time</Icon>\r\n                  <span className=\"title\">Dura√ß√£o</span>\r\n                  <p>{runtime}</p>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"red darken-4 circle\">insert_emoticon</Icon>\r\n                  <span className=\"title\">G√™nero</span>\r\n                  <p>{genre}</p>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"blue darken-4 circle\">people</Icon>\r\n                  <span className=\"title\">Atores</span>\r\n                  <p>{actors}</p>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"purple darken-4 circle\">person</Icon>\r\n                  <span className=\"title\">Dire√ß√£o</span>\r\n                  <p>{director}</p>\r\n                </CollectionItem>\r\n                <CollectionItem className=\"avatar\">\r\n                  <Icon className=\"cyan darken-4 circle\">movie_creation</Icon>\r\n                  <span className=\"title\">Produ√ß√£o</span>\r\n                  <p>{production}</p>\r\n                </CollectionItem>\r\n              </Collection>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetails;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../assets/css/MovieCard.css';\r\nimport MovieDetails from '../parts/MovieDetails';\r\nimport { getMovieDetails } from '../../store/actions/searchActions';\r\n\r\nclass MovieCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = this.initState;\r\n  }\r\n  \r\n  get initState() {\r\n    return {\r\n      movieDetails: '',\r\n    }\r\n  }\r\n\r\n  getDetails = (imdbID) => {\r\n    this.props.getMovieDetails(imdbID);\r\n  }\r\n\r\n  render() {\r\n    const { movie, movieDetails } = this.props;\r\n    return (\r\n      <div className=\"zoom col s3\" onClick={() => this.getDetails(movie.imdbID)}>\r\n        <MovieDetails \r\n          movieDetails={movieDetails}\r\n          trigger={\r\n            <div className=\"card small horizontal\" >\r\n              <div className=\"card-image\">\r\n                <img alt={`${movie.Title}'s Poster`} src={movie.Poster === \"N/A\" ? \"\" : movie.Poster} />\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <p className=\"movie-type red-text text-darken-2\">{movie.Type}</p>\r\n                  <span className=\"card-title small grey-text text-darken-4 trunc\">{movie.Title}</span>\r\n                  <p className=\"green-text text-accent-4\">{movie.Year}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <div className=\"red-text text-darken-4\">VER MAIS</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n     </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movieDetails: state.search.movieDetails\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMovieDetails: (imdbID) => dispatch(getMovieDetails(imdbID))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieCard);\r\n\r\n        /* <div className=\"card small horizontal\" onClick={() => this.getDetails(movie.imdbID)}>\r\n          <div className=\"card-image\">\r\n            <img alt={`${movie.Title}'s Poster`} src={movie.Poster === \"N/A\" ? \"\" : movie.Poster} />\r\n          </div>\r\n          <div className=\"card-stacked\">\r\n            <div className=\"card-content\">\r\n              <p className=\"movie-type red-text text-darken-2\">{movie.Type}</p>\r\n              <span className=\"card-title small grey-text text-darken-4 trunc\">{movie.Title}</span>\r\n              <p className=\"green-text text-accent-4\">{movie.Year}</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <MovieDetails \r\n                header={movie.Title} \r\n                movieDetails={movieDetails}\r\n                trigger={\r\n                \r\n                \r\n                \r\n                  <div className=\"red-text text-darken-4\">VER MAIS</div>\r\n                \r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div> */","import React, { Component } from 'react';\r\nimport '../../assets/css/GridMovies.css'\r\nimport { connect } from 'react-redux';\r\nimport MovieCard from '../parts/MovieCard';\r\nimport { Pagination } from 'react-materialize';\r\nimport { searchMovie } from '../../store/actions/searchActions';\r\n\r\nclass GridMovies extends Component {\r\n\r\n  getMoviesByPage = (page) => {\r\n    this.props.searchMovie(this.props.titleSearch, page);\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.props;\r\n    const results = movies && movies.Search;\r\n    return (\r\n      <React.Fragment>\r\n        <h5>{`${(movies.totalResults) ? movies.totalResults : \"Nenhum \"} filme(s) encontrado(s)`}</h5>\r\n        <div className=\"divider\"></div>\r\n        <div className=\"row\">\r\n          {results && results.map((movie, key) => {\r\n            return (\r\n              <React.Fragment key={key}>\r\n                <MovieCard movie={movie} />          \r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n        {(movies.totalResults) \r\n          ? \r\n          <Pagination\r\n            activePage={1}\r\n            maxButtons={8}\r\n            items={Math.round(movies.totalResults / 10)}\r\n            onSelect={(page)=>this.getMoviesByPage(page)} />\r\n          :\r\n          \"\"\r\n        }        \r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    titleSearch: state.search.titleSearch,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchMovie: (titleSearch, page) => dispatch(searchMovie(titleSearch, page))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GridMovies);","import React, { Component } from 'react';\r\nimport SearchForm from '../parts/SearchForm';\r\nimport '../../assets/css/SearchPage.css';\r\nimport { connect } from 'react-redux';\r\nimport GridMovies from '../parts/GridMovies';\r\n\r\nclass SearchPage extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"Search grey darken-4\">\r\n        <div className=\"container\">\r\n          <div className=\"space\"></div>\r\n          <SearchForm />\r\n          <h4>{this.props.titleSearch === \"\" ? \"Campo de pesquisa vazio\": `Resultado da pesquisa por \"${this.props.titleSearch}\"` }</h4>\r\n          <GridMovies movies={this.props.movies} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    titleSearch: state.search.titleSearch,\r\n    movies: state.search.movies\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchPage);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport HomePage from './components/pages/HomePage';\nimport SearchPage from './components/pages/SearchPage';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" component={HomePage}/>\n            <Route path=\"/search\" component={SearchPage}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  titleSearch: '',\r\n  movies: {},\r\n  page: 1\r\n}\r\nconst searchReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH_MOVIES':\r\n      return {\r\n        titleSearch: action.searchText,\r\n        movies: action.movies,\r\n        page: action.page\r\n      }\r\n    case 'GET_MOVIE_DETAILS':\r\n        return {\r\n          ...state,\r\n          movieDetails: action.movieDetails\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default searchReducer;","import searchReducer from './searchReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  search: searchReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}